#version 430 core

in vec2 out_uv;

out vec4 glFragcolor;

uniform sampler2D colorTexBuffer;

const float offset = 1.0 / 300.0;  

void main()
{
    vec2 offsets[9] = vec2[](
        vec2(-offset,  offset), // top-left
        vec2( 0.0f,    offset), // top-center
        vec2( offset,  offset), // top-right
        vec2(-offset,  0.0f),   // center-left
        vec2( 0.0f,    0.0f),   // center-center
        vec2( offset,  0.0f),   // center-right
        vec2(-offset, -offset), // bottom-left
        vec2( 0.0f,   -offset), // bottom-center
        vec2( offset, -offset)  // bottom-right    
    );

    float kernel[9] = float[](
        1, 1, 1,
        1, -8, 1,
        1, 1, 1
    );
    
    vec3 sampleTex[9];
    for(int i = 0; i < 9; i++)
    {
        sampleTex[i] = vec3(texture(colorTexBuffer, out_uv.st + offsets[i]));
    }
    vec3 col = vec3(0.0);
    for(int i = 0; i < 9; i++)
        col +=  sampleTex[i] * kernel[i];
    
    glFragcolor = vec4(1/col.x, 1/col.y, 1/col.z, 1.0);
}  
//{
//vec4 tex_color = texture( colorTexBuffer, out_uv );
//	float average= (tex_color.x*30+tex_color.y*59+tex_color.z*11)/100;
//	vec4 grey_color = vec4(average, average, average, 1.0);
//	glFragcolor = tex_color;	
//}